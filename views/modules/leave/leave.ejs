<%- include('../../partials/header') %>

<style>
  .table-responsive {
    overflow-x: auto;
  }

  .table {
    background-color: white;
    border-collapse: collapse;
    width: 100%;
  }

  .table th {
    background-color: #212529;
    color: white;
    font-weight: 500;
    text-align: center;
  }

  .table td, .table th {
    padding: 12px;
    border: 1px solid #dee2e6;
  }

  .table tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.05);
  }

  /* Approve and Reject Buttons */
  .action-buttons {
    display: flex;
    gap: 8px;
    justify-content: center;
  }

  .approve, .reject {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 6px 12px;
    border: none;
    border-radius: 5px;
    font-weight: bold;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .approve {
    background-color: #28a745;
    color: white;
  }

  .approve:hover {
    background-color: #218838;
    transform: scale(1.1);
  }

  .reject {
    background-color: #dc3545;
    color: white;
  }

  .reject:hover {
    background-color: #c82333;
    transform: scale(1.1);
  }

  .approve i, .reject i {
    margin-right: 5px;
  }

  .processed {
    font-weight: bold;
    color: gray;
  }
</style>

<!-- Breadcrumbs -->
<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="/leave">Leave Management</a></li>
    <li class="breadcrumb-item active" aria-current="page">Leave Requests</li>
  </ol>
</nav>

<h1 class="mb-4 text-center">Pending Leave Requests</h1>

<div class="container">
  <!-- Leave Requests -->
  <div class="card p-4 mb-4">
    <h3>Pending Leave Requests</h3>
    <div class="table-responsive mt-3">
      <table class="table table-striped">
        <thead>
          <tr>
            <th>#</th>
            <th>Employee ID</th>
            <th>Employee Name</th>
            <th>Leave Start Date</th>
            <th>Leave End Date</th>
            <th>Reason</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% if (leaveRequests && leaveRequests.length > 0) { %>
            <% leaveRequests.forEach((request, index) => { %>
              <tr>
                <td><%= index + 1 %></td>
                <td><%= request.Employee_ID %></td>
                <td><%= request.Employee_Name %></td>
                <td><%= new Date(request.Start_Date).toISOString().split('T')[0] %></td>
                <td><%= new Date(request.End_Date).toISOString().split('T')[0] %></td>
                <td><%= request.Reason %></td>
                <td><%= request.Permission_Status %></td>
                <td class="action-buttons">
                  <% if (request.Permission_Status === 'Pending') { %>
                    <button class="approve" onclick="handleApprove(<%= request.Leave_ID %>)">
                      <i class="fas fa-check-circle"></i> Approve
                    </button>
                    <button class="reject" onclick="handleReject(<%= request.Leave_ID %>)">
                      <i class="fas fa-times-circle"></i> Reject
                    </button>
                  <% } else { %>
                    <span class="processed">Processed</span>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="8" class="text-center">No pending leave requests</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
async function handleApprove(leaveId) {
    try {
        const response = await fetch(`/leave/requests/approve/${leaveId}`, { method: "POST" });
        const result = response.headers.get("content-type")?.includes("application/json")
            ? await response.json()
            : { message: "Unexpected response format" };

        if (!response.ok) {
            throw new Error(result.message || "Failed to approve leave request.");
        }

        alert(result.message);
        location.reload();
    } catch (error) {
        console.error("Approval Error:", error);
        alert(error.message);
    }
}

async function handleReject(leaveId) {
    try {
        const response = await fetch(`/leave/requests/reject/${leaveId}`, { method: "POST" });
        const result = response.headers.get("content-type")?.includes("application/json")
            ? await response.json()
            : { message: "Unexpected response format" };

        if (!response.ok) {
            throw new Error(result.message || "Failed to reject leave request.");
        }

        alert(result.message);
        location.reload();
    } catch (error) {
        console.error("Rejection Error:", error);
        alert(error.message);
    }
}

</script>

<%- include('../../partials/footer') %>
