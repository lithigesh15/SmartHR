<%- include('../../partials/header') %>

<style>
  .form-control {
    border-radius: 5px;
    padding: 10px;
    border: 1px solid #ced4da;
  }

  .form-control:focus {
    border-color: #0d6efd;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
  }

  .form-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
  }

  .card {
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
  }
  
  .content-section {
    display: none;
  }
  
  .content-section.active {
    display: block;
  }
  
  .toggle-buttons {
    margin-bottom: 20px;
    text-align: center;
  }
  
  .breadcrumb {
    margin-bottom: 20px;
    padding: 10px 15px;
    background-color: #f8f9fa;
    border-radius: 4px;
  }
</style>

<!-- Breadcrumbs -->
<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="/payroll">Payroll</a></li>
    <li class="breadcrumb-item active" aria-current="page">Salary Structure</li>
  </ol>
</nav>

<h1 class="mb-4 text-center">Salary Structure</h1>

<div class="container">
  <div class="toggle-buttons">
    <button id="toggle-structure" class="btn btn-outline-primary active">Manage Structure</button>
    <button id="toggle-calculator" class="btn btn-outline-primary">Salary Calculator</button>
  </div>
  
  <!-- Manage Structure Section -->
  <div id="structure-section" class="content-section active">
    <h3>Salary Structure Components</h3>
    <div class="card p-4">
      <table class="table table-striped">
        <thead>
          <tr>
            <th>#</th>
            <th>Component Name</th>
            <th>Type</th>
            <th>Default Value</th>
            <th>Calculation Method</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="structure-list">
          <% if(typeof salaryComponents !== 'undefined' && salaryComponents && salaryComponents.length > 0) { %>
            <% salaryComponents.forEach((component, index) => { %>
              <tr>
                <td><%= index + 1 %></td>
                <td><%= component.name %></td>
                <td><%= component.type %></td>
                <td><%= component.defaultValue %></td>
                <td><%= component.calculationMethod %></td>
                <td>
                  <button class="btn btn-sm btn-primary edit-component" data-id="<%= component.id %>">Edit</button>
                  <button class="btn btn-sm btn-danger delete-component" data-id="<%= component.id %>">Delete</button>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="6" class="text-center">No salary components found</td>
            </tr>
          <% } %>
        </tbody>
      </table>
      <div class="mt-3">
        <button class="btn btn-success" id="add-component">Add Component</button>
      </div>
    </div>
  </div>
  
  <!-- Salary Calculator Section -->
  <div id="calculator-section" class="content-section">
    <h3>Calculate Salary</h3>
    <div class="card p-4">
      <form id="salaryForm">
        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="employeeId" class="form-label">Employee ID</label>
            <input type="text" id="employeeId" class="form-control" required>
          </div>
          <div class="col-md-6 mb-3">
            <label for="employeeName" class="form-label">Employee Name</label>
            <input type="text" id="employeeName" class="form-control" readonly>
          </div>
        </div>
        
        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="basicSalary" class="form-label">Basic Salary</label>
            <input type="number" id="basicSalary" class="form-control" required>
          </div>
          <div class="col-md-6 mb-3">
            <label for="department" class="form-label">Department</label>
            <input type="text" id="department" class="form-control" readonly>
          </div>
        </div>

        <div class="row">
          <div class="col-md-3 mb-3">
            <label for="hra" class="form-label">HRA (%)</label>
            <input type="number" id="hra" class="form-control">
          </div>
          <div class="col-md-3 mb-3">
            <label for="medical" class="form-label">Medical Allowance</label>
            <input type="number" id="medical" class="form-control">
          </div>
          <div class="col-md-3 mb-3">
            <label for="pf" class="form-label">Provident Fund (%)</label>
            <input type="number" id="pf" class="form-control">
          </div>
          <div class="col-md-3 mb-3">
            <label for="tax" class="form-label">Tax (%)</label>
            <input type="number" id="tax" class="form-control">
          </div>
        </div>

        <div class="row">
          <div class="col-md-6 mb-3">
            <label for="grossSalary" class="form-label">Gross Salary</label>
            <input type="text" id="grossSalary" class="form-control" readonly>
          </div>
          <div class="col-md-6 mb-3">
            <label for="netSalary" class="form-label">Net Salary</label>
            <input type="text" id="netSalary" class="form-control" readonly>
          </div>
        </div>

        <div class="d-flex justify-content-between">
          <button type="submit" class="btn btn-primary">Calculate</button>
          <button type="button" class="btn btn-success" id="update-payslip">Update Payslip</button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Get toggle buttons
  const structureToggle = document.getElementById('toggle-structure');
  const calculatorToggle = document.getElementById('toggle-calculator');
  
  // Get sections
  const structureSection = document.getElementById('structure-section');
  const calculatorSection = document.getElementById('calculator-section');
  
  // Toggle function
  structureToggle.addEventListener('click', function() {
    structureToggle.classList.add('active');
    calculatorToggle.classList.remove('active');
    structureSection.classList.add('active');
    calculatorSection.classList.remove('active');
  });
  
  calculatorToggle.addEventListener('click', function() {
    calculatorToggle.classList.add('active');
    structureToggle.classList.remove('active');
    calculatorSection.classList.add('active');
    structureSection.classList.remove('active');
  });

  // Attach event listener to form submission
  const salaryForm = document.getElementById('salaryForm');
  if (salaryForm) {
    salaryForm.addEventListener('submit', function(e) {
      e.preventDefault();
      calculateSalary();
    });
  }
  
  // Add Component button event listener
  document.getElementById('add-component').addEventListener('click', function() {
    // Here you would implement opening a modal or form to add a new component
    alert('Add component functionality will be implemented here');
  });
  
  // Update Payslip button event listener
  document.getElementById('update-payslip').addEventListener('click', function() {
    alert('Payslip has been updated successfully!');
    // Here you would implement the actual update functionality
  });
  
  // Edit and Delete buttons event listeners
  const editButtons = document.querySelectorAll('.edit-component');
  editButtons.forEach(button => {
    button.addEventListener('click', function() {
      const componentId = this.getAttribute('data-id');
      alert('Edit component with ID: ' + componentId);
      // Here you would implement the edit functionality
    });
  });
  
  const deleteButtons = document.querySelectorAll('.delete-component');
  deleteButtons.forEach(button => {
    button.addEventListener('click', function() {
      if (confirm('Are you sure you want to delete this component?')) {
        const componentId = this.getAttribute('data-id');
        alert('Delete component with ID: ' + componentId);
        // Here you would implement the delete functionality
      }
    });
  });
  
  // Auto-fetch employee details when ID is entered
  document.getElementById('employeeId').addEventListener('blur', function() {
    const employeeId = this.value;
    if (employeeId) {
      // Simulate fetching employee data
      setTimeout(() => {
        document.getElementById('employeeName').value = 'John Doe';
        document.getElementById('department').value = 'IT Department';
        document.getElementById('basicSalary').value = '50000';
      }, 500);
    }
  });
});

function calculateSalary() {
  const basicSalary = parseFloat(document.getElementById('basicSalary').value) || 0;
  const hra = parseFloat(document.getElementById('hra').value) || 0;
  const medical = parseFloat(document.getElementById('medical').value) || 0;
  const pf = parseFloat(document.getElementById('pf').value) || 0;
  const tax = parseFloat(document.getElementById('tax').value) || 0;

  // Calculate gross and net salary
  const hraAmount = (basicSalary * hra) / 100;
  const pfAmount = (basicSalary * pf) / 100;
  const taxAmount = (basicSalary * tax) / 100;
  
  const grossSalary = basicSalary + hraAmount + medical;
  const netSalary = grossSalary - pfAmount - taxAmount;
  
  // Update the form
  document.getElementById('grossSalary').value = grossSalary.toFixed(2);
  document.getElementById('netSalary').value = netSalary.toFixed(2);
}
</script>

<%- include('../../partials/footer') %>